객체 지향 프로그램에서는 클래스 간에 서로 긴밀한 관계를 맺고 상호작용한다.

사용하는 이유 :
특정 클래스만 관계를 맺을 경우 중첩 클래스로 선언하는 것이 유지보수에 도움이 되는데,
중첩 클래스란 클래수 내부에 선언한 클래스이다.
중첨 클래스를 사용하게 되면 클래스의 멤버를 쉽게 접근하여 사용할 수 있고
외부에 중첩 관계 클래스를 감출 수 있어 코드의 복잡성을 줄일 수 있다.

중첩클래스의 종류 (분류기준 : 선언 위치)
1. 멤버 클래스 : 클래스의 멤버로써 선언되는 중첩클래스
   - 인스턴스 멤버 클래스
   - 정적 멤버 클래스
2. 메서드에서 선언되는 중첩 클래스
   - 로컬 클래스

중첩 클래스 하나의 클래스이다
컴파일 하면 바이트코드(.class) 생성된다.
멤버 : A$B.class
로컬 : A$1B.class


내부 클래스(Inner Class) - 중첩클래스(nested Class)
하나의 클래스 내부에 선언된 또 다른 클래스

1. 클래스를 논리적으로 그룹화(패키지를 간소화)

2. 타이트한 캡슐화 적용


로컬 클래스
생성자 또는 메서드 내부에서

메서드 내의 로컬 클래스에서 지역변수에 접근해서 값을 사용하려고 할 때 반드시 final 상수화된 지역변수만 사용 가능
변수에 final 이 컴파일러에 의해 자동 처리된다.
지역 변수(상수) 값을 수정하려면 컴파일 에러

-Builder Pattern (빌더 패턴)
    복잡한 객체의 생성과정과 표현방법을 분리해서 다양한 인스턴스를 만드는 생성패턴이다.